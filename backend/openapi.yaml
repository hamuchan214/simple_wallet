openapi: 3.0.0
info:
  title: Simple Wallet API
  description: API for managing a simple wallet application with transactions
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: User successfully registered
        "400":
          description: Invalid input
        "409":
          description: Username already exists

  /login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials

  /transactions:
    get:
      summary: Get all transactions
      tags:
        - Transactions
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "401":
          description: Unauthorized

    post:
      summary: Create a new transaction
      tags:
        - Transactions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTransaction"
      responses:
        "200":
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized

  /transactions/{id}:
    get:
      summary: Get a specific transaction
      tags:
        - Transactions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found

    patch:
      summary: Update a transaction
      tags:
        - Transactions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTransaction"
      responses:
        "200":
          description: Transaction updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found

    delete:
      summary: Delete a transaction
      tags:
        - Transactions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        "204":
          description: Transaction deleted
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found

  /statistics:
    get:
      summary: Get a statistics
      tags:
        - Statistics
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date

      responses:
        "200":
          description: basic statistics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Statistics"
        "401":
          description: Unauthorized

  /tags:
    get:
      summary: Get all tags
      tags:
        - Tag
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
        "401":
          description: Unauthorized

    post:
      summary: Create a new transaction
      tags:
        - Tag
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTag"
      responses:
        "200":
          description: Tag created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "409":
          description: Tag already exists or Tag is reserved by the system

  /tags/{id}:
    delete:
      summary: Delete a tag
      tags:
        - Tag
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      responses:
        "204":
          description: Tag deleted
        "401":
          description: Unauthorized
        "404":
          description: Tag not found

components:
  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        id:
          type: number

    CreateTransaction:
      type: object
      required:
        - amount
        - date
        - tags
      properties:
        amount:
          type: number
          description: Transaction amount
        description:
          type: string
          description: Transaction description
        date:
          type: string
          format: date
          description: Transaction date
        tags:
          type: array
          items:
            type: string
          description: Transaction tags

    Transaction:
      allOf:
        - $ref: "#/components/schemas/CreateTransaction"
        - type: object
          properties:
            id:
              type: number
            userId:
              type: string

    tagAmount:
      type: object
      properties:
        name:
          type: string
        amount:
          type: number

    Statistics:
      type: object
      properties:
        totalExpense:
          type: number
        totalIncome:
          type: number
        balance:
          type: number
        tagAmounts:
          type: array
          items:
            $ref: "#/components/schemas/tagAmount"

    CreateTag:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: tag name

    Tag:
      allOf:
        - $ref: "#/components/schemas/CreateTag"
        - type: object
          properties:
            id:
              type: number
              nullable: true
              description: Only exists in custom tag

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
